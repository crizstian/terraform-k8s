resource "random_string" "suffix" {
  length  = 4
  special = false
  lower   = true
}

module "kubernets_harness" {
  source = "./modules/kubernetes"
  providers = {
    kubernetes = kubernetes.gke
  }
}

resource "harness_platform_secret_text" "inline" {
  name                      = "${var.gke_cluster_name}_service_account_token"
  description               = "secret generated by terraform"
  identifier                = lower(replace("${var.gke_cluster_name}_service_account_token", "/[\\s-.]/", "_"))
  tags                      = var.tags
  secret_manager_identifier = "account.harnessSecretManager"
  value_type                = "Inline"
  value                     = lookup(module.kubernets_harness.service_account_token.data, "token")
}

module "harness_connectors" {
  depends_on                                 = [module.kubernets_harness, resource.harness_platform_secret_text.inline]
  source                                     = "git::https://github.com/crizstian/harness-terraform-modules.git//harness-connector?ref=refactor"
  suffix                                     = random_string.suffix.id
  harness_platform_kubernetes_connectors     = local.harness_platform_kubernetes_connectors
  harness_platform_kubernetes_ccm_connectors = local.kubernetes_ccm_connector
}

module "harness_ccm" {
  source                     = "git::https://github.com/crizstian/harness-terraform-modules.git//harness-ccm/kubernetes?ref=refactor"
  harness_account_id         = var.harness_account_id
  harness_autostopping_token = var.harness_autostopping_token
  kubernetes_connector_id    = module.harness_connectors.all.kubernetes_connectors[var.gke_cluster_name].identifier
}
